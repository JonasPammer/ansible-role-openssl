---
- name: output some generally helpful debug information about the provisioned machine
  hosts: all
  become: true
  gather_facts: true

  tasks:
    - name: debug output machine facts
      ansible.builtin.include_tasks: ../resources/debug.yml

### Actual Role Verification Tasks:
- name: Verify
  hosts: all

  vars:
    openssl_items:
      - filename: jonaspammer_at
        csr_common_name: jonaspammer.at

  roles:
    - role: "ansible-role-openssl" # actually needed for vars only

  tasks:
    ## Simple Certificate Checks ##
    - name: get md5 hash of crt
      ansible.builtin.shell: >
        set -o pipefail;
        openssl x509 -noout -modulus -in "{{ openssl_crt_directory }}/{{ openssl_items[0].filename }}.crt" |
          openssl md5 | grep "stdin" | sed 's/^.* //'
      args:
        executable: /bin/bash
      register: openssl__register_shell_md5_crt
      changed_when: false

    - name: get md5 hash of key
      ansible.builtin.shell: >
        set -o pipefail;
        openssl rsa -noout -modulus -in "{{ openssl_key_directory }}/{{ openssl_items[0].filename }}.key" |
          openssl md5 | grep "stdin" | sed 's/^.* //'
      args:
        executable: /bin/bash
      register: openssl__register_shell_md5_key
      changed_when: false

    - name: get md5 hash of csr
      ansible.builtin.shell: >
        set -o pipefail;
        openssl req -noout -modulus -in "{{ openssl_csr_directory }}/{{ openssl_items[0].filename }}.csr" |
          openssl md5 | grep "stdin" | sed 's/^.* //'
      args:
        executable: /bin/bash
      register: openssl__register_shell_md5_csr
      changed_when: false

    - name: Assert that openssl md5 hash of every file matches.
      ansible.builtin.assert:
        that:
          - >
            (openssl__register_shell_md5_crt.stdout == openssl__register_shell_md5_key.stdout) and
            (openssl__register_shell_md5_crt.stdout == openssl__register_shell_md5_csr.stdout)

    - name: Get parsed information of generated certificate using x509_certificate_info.
      community.crypto.x509_certificate_info:
        path: "{{ openssl_crt_directory }}/{{ openssl_items[0].filename }}.crt"
        valid_at:
          point_1: "+3649d"
          point_2: "+3651d"
      register: openssl__register_x509certificateinfo

    - name: dump information
      ansible.builtin.debug:
        var: openssl__register_x509certificateinfo

    - name: Validate that certificate is valid tomorrow, but not in three weeks
      assert:
        that:
          - openssl__register_x509certificateinfo.valid_at.point_1
          - not openssl__register_x509certificateinfo.valid_at.point_2
